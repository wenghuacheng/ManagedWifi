[
  {
    "Id": "813819",
    "ThreadId": "349552",
    "Html": "\r\n<p>Hey guys , i've just started experimentig with the managed wifi API , and it works delightfully well till i don't want to update the profile for connection.Because at that point i always get a Win32Exception , namely &quot;The network connection file is corrupted&quot;\r\n and i just can't figure it out how to make this work , please help me.<br>\r\nhere is my code : </p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:blue\">using</span> System.Linq;\r\n<span style=\"color:blue\">using</span> System.Text;\r\n<span style=\"color:blue\">using</span> NativeWifi;\r\n\r\n<span style=\"color:blue\">namespace</span> wifi\r\n{\r\n    <span style=\"color:blue\">class</span> Program\r\n    {\r\n                <span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> GetStringForSSID(Wlan.Dot11Ssid ssid)\r\n        {\r\n            <span style=\"color:blue\">return</span> Encoding.ASCII.GetString(ssid.SSID, 0, (<span style=\"color:blue\">int</span>)ssid.SSIDLength);\r\n        }\r\n\r\n\r\n        <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> Main(<span style=\"color:blue\">string</span>[] args)\r\n        {\r\n            <span style=\"color:blue\">int</span> NetIncrementator = 0;\r\n            <span style=\"color:blue\">string</span> ssid = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n            <span style=\"color:blue\">string</span> password = <span style=\"color:#a31515\">&quot;xyz&quot;</span>;\r\n             WlanClient client = <span style=\"color:blue\">new</span> WlanClient();\r\n            <span style=\"color:blue\">foreach</span> (WlanClient.WlanInterface wlanIface <span style=\"color:blue\">in</span> client.Interfaces)\r\n            {\r\n                <span style=\"color:green\">// Lists all networks with WEP security</span>\r\n                Wlan.WlanAvailableNetwork[] networks = wlanIface.GetAvailableNetworkList(0);\r\n                <span style=\"color:gray\">///</span><span style=\"color:green\">///////////////////////////////////////////////////////////////////////////////////////////////////SSID and selecting</span>\r\n                <span style=\"color:blue\">foreach</span> (Wlan.WlanAvailableNetwork network <span style=\"color:blue\">in</span> networks)\r\n                {\r\n                    <span style=\"color:blue\">if</span> (network.dot11DefaultCipherAlgorithm == Wlan.Dot11CipherAlgorithm.CCMP)\r\n                    {\r\n                        <span style=\"color:blue\">if</span> (<span style=\"color:#a31515\">&quot;Janus Computers&quot;</span> == GetStringForSSID(network.dot11Ssid))\r\n                        {\r\n                            Console.WriteLine(<span style=\"color:#a31515\">&quot;Found WPA network with SSID {0}.&quot;</span>, GetStringForSSID(network.dot11Ssid));\r\n                            ssid = GetStringForSSID(network.dot11Ssid);\r\n                            <span style=\"color:blue\">break</span>;\r\n\r\n                        }\r\n                        <span style=\"color:blue\">else</span>\r\n                        {\r\n                            <span style=\"color:blue\">if</span>(GetStringForSSID(network.dot11Ssid) != ssid)\r\n                                NetIncrementator&#43;&#43;;\r\n                            ssid = GetStringForSSID(network.dot11Ssid);\r\n                        }\r\n                    }\r\n                }\r\n            \r\n                <span style=\"color:gray\">///</span><span style=\"color:green\">//////////////////////////////////////////////////////////////////////////////////////////////////////MAC Address</span>\r\n                Wlan.WlanBssEntry[] wlanBssEntries = wlanIface.GetNetworkBssList();\r\n                Wlan.WlanBssEntry wlanBssEntry = wlanBssEntries[NetIncrementator];\r\n                \r\n                    <span style=\"color:blue\">byte</span>[] macAddr = wlanBssEntry.dot11Bssid;\r\n                    <span style=\"color:blue\">var</span> macAddrLen = (<span style=\"color:blue\">uint</span>)macAddr.Length;\r\n                    <span style=\"color:blue\">var</span> str = <span style=\"color:blue\">new</span> <span style=\"color:blue\">string</span>[(<span style=\"color:blue\">int</span>)macAddrLen];\r\n                    <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; macAddrLen; i&#43;&#43;)\r\n                    {\r\n                        str[i] = macAddr[i].ToString(<span style=\"color:#a31515\">&quot;x2&quot;</span>);\r\n                    }\r\n                    <span style=\"color:blue\">string</span> mac1 = <span style=\"color:blue\">string</span>.Join(<span style=\"color:#a31515\">&quot;&quot;</span>, str);\r\n                    Console.WriteLine(mac1);\r\n                    <span style=\"color:gray\">///</span><span style=\"color:green\">///////////////////////////////////////////////////////////////////////////////////////////////////profile settings</span>\r\n                    Wlan.WlanProfileInfo[] profileInfos = wlanIface.GetProfiles();\r\n                    Wlan.WlanProfileInfo profileInfo = profileInfos[NetIncrementator];\r\n                    <span style=\"color:blue\">string</span> name = profileInfo.profileName; <span style=\"color:green\">// this is typically the network's SSID</span>\r\n                    <span style=\"color:blue\">string</span> xml = wlanIface.GetProfileXml(profileInfo.profileName);\r\n                    <span style=\"color:gray\">///</span><span style=\"color:green\">///////////////////////////////////////////////////////////////////////////////////////////////////Trying to connect</span>\r\n                    <span style=\"color:blue\">string</span> profileName = ssid ; <span style=\"color:green\">// this is also the SSID</span>\r\n                    <span style=\"color:blue\">string</span> key = password;\r\n                    <span style=\"color:blue\">string</span> profilexml = <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;&lt;?xml version=\\&quot;1.0\\&quot;?&gt;&lt;WLANProfile xmlns=\\&quot;http://www.microsoft.com/networking/WLAN/profile/v1\\&quot;&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;SSIDConfig&gt;&lt;SSID&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;/SSID&gt;&lt;/SSIDConfig&gt;&lt;connectionType&gt;ESS&lt;/connectionType&gt;&lt;connectionMode&gt;auto&lt;/connectionMode&gt;&lt;autoswitch&gt;false&lt;/autoswitch&gt;&lt;MSM&gt;&lt;security&gt;&lt;authEncryption&gt;&lt;authentication&gt;WPA2PSK&lt;/authentication&gt;&lt;encryption&gt;AES&lt;/encryption&gt;&lt;useOneX&gt;false&lt;/useOneX&gt;&lt;/authEncryption&gt;&lt;sharedKey&gt;&lt;keyType&gt;PassPhrase&lt;/keyType&gt;&lt;protected&gt;false&lt;/protected&gt;&lt;keyMaterial&gt;{1}&lt;/keyMaterial&gt;&lt;/sharedKey&gt;&lt;/security&gt;&lt;/MSM&gt;&lt;/WLANProfile&gt;&quot;</span>, profileName, key);\r\n                    wlanIface.SetProfile(Wlan.WlanProfileFlags.AllUser, profilexml, <span style=\"color:blue\">true</span>);\r\n                    wlanIface.Connect(Wlan.WlanConnectionMode.Profile, Wlan.Dot11BssType.Any, ssid);\r\n                    Console.WriteLine(name);\r\n                    Console.WriteLine(profilexml);\r\n            }\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-03-21T19:03:57.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "814875",
    "ThreadId": "349552",
    "Html": "<p>I spent all day looking at the code wondering why I was getting the same error... turns out I was sending incorrect data in the mac address the entire time... Looks like you are doing&nbsp;something&nbsp;along the lines of what I tried to do with the mac address... I figured out it was really the network name converted to mac after searching up the interop code. Let me know if this works for you!</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>                    WlanClient.WlanInterface wlanIface = ....\r\n                    <span style=\"color: blue;\">var</span> networkName = \"ZuechBNetwork\";\r\n                    <span style=\"color: blue;\">var</span> macAddress = ConvertToHex(networkName);\r\n\r\n                    <span style=\"color: green;\">// Connects to a known network with WEP security</span>\r\n                    <span style=\"color: blue;\">string</span> profileName = networkName; <span style=\"color: green;\">// this is also the SSID</span>\r\n                    <span style=\"color: blue;\">string</span> mac = macAddress;\r\n                    <span style=\"color: blue;\">string</span> key = password;\r\n                    <span style=\"color: blue;\">string</span> profileXml = <span style=\"color: blue;\">string</span>.Format(<span style=\"color: #a31515;\">\"&lt;?xml version=\\\"1.0\\\"?&gt;&lt;WLANProfile xmlns=\\\"http://www.microsoft.com/networking/WLAN/profile/v1\\\"&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;SSIDConfig&gt;&lt;SSID&gt;&lt;hex&gt;{1}&lt;/hex&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;/SSID&gt;&lt;/SSIDConfig&gt;&lt;connectionType&gt;ESS&lt;/connectionType&gt;&lt;MSM&gt;&lt;security&gt;&lt;authEncryption&gt;&lt;authentication&gt;open&lt;/authentication&gt;&lt;encryption&gt;WEP&lt;/encryption&gt;&lt;useOneX&gt;false&lt;/useOneX&gt;&lt;/authEncryption&gt;&lt;sharedKey&gt;&lt;keyType&gt;networkKey&lt;/keyType&gt;&lt;protected&gt;false&lt;/protected&gt;&lt;keyMaterial&gt;{2}&lt;/keyMaterial&gt;&lt;/sharedKey&gt;&lt;keyIndex&gt;0&lt;/keyIndex&gt;&lt;/security&gt;&lt;/MSM&gt;&lt;/WLANProfile&gt;\"</span>, profileName, mac, key);\r\n                    wlanIface.SetProfile(Wlan.WlanProfileFlags.AllUser, profileXml, <span style=\"color: blue;\">true</span>);\r\n                    wlanIface.Connect(Wlan.WlanConnectionMode.Profile, Wlan.Dot11BssType.Any, profileName);\r\n\r\n                    MessageBox.Show(<span style=\"color: #a31515;\">\"Attempted Connection to: \"</span> + networkName);\r\n</pre>\r\n</div>\r\n</p>\r\n<p>and the method to add to it...</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><br />        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> ConvertToHex(<span style=\"color: blue;\">string</span> asciiString)\r\n        {\r\n            <span style=\"color: blue;\">string</span> hex = <span style=\"color: #a31515;\">\"\"</span>;\r\n            <span style=\"color: blue;\">foreach</span> (<span style=\"color: blue;\">char</span> c <span style=\"color: blue;\">in</span> asciiString)\r\n            {\r\n                <span style=\"color: blue;\">int</span> tmp = c;\r\n                hex += String.Format(<span style=\"color: #a31515;\">\"{0:x2}\"</span>, (<span style=\"color: blue;\">uint</span>)System.Convert.ToUInt32(tmp.ToString()));\r\n            }\r\n            <span style=\"color: blue;\">return</span> hex;\r\n        }\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2012-03-23T14:45:52.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]