[
  {
    "Id": "947280",
    "ThreadId": "404651",
    "Html": "\r\n<p>Whenever I am trying to connect to a network with WPA2PSK security with TKIP/AES Encryption I am getting &quot;The network connection profile is corrupted&quot;. Below is the profilexml I am using.</p>\r\n<p>profileXml = <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;&lt;?xml version=\\&quot;1.0\\&quot; ?&gt;&lt;WLANProfile xmlns=\\&quot;http://www.microsoft.com/networking/WLAN/profile/v1\\&quot;&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;SSIDConfig&gt;&lt;SSID&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;/SSID&gt;&lt;/SSIDConfig&gt;&lt;connectionType&gt;ESS&lt;/connectionType&gt;&lt;connectionMode&gt;auto&lt;/connectionMode&gt;&lt;autoSwitch&gt;false&lt;/autoSwitch&gt;&lt;MSM&gt;&lt;security&gt;&lt;authEncryption&gt;&lt;authentication&gt;WPA2PSK&lt;/authentication&gt;&lt;encryption&gt;TKIP&lt;/encryption&gt;&lt;useOneX&gt;false&lt;/useOneX&gt;&lt;/authEncryption&gt;&lt;sharedKey&gt;&lt;keyType&gt;passPhrase&lt;/keyType&gt;&lt;protected&gt;true&lt;/protected&gt;&lt;keyMaterial&gt;{1}&lt;/keyMaterial&gt;&lt;/sharedKey&gt;&lt;/security&gt;&lt;/MSM&gt;&lt;/WLANProfile&gt;&quot;</span>,\r\n profileName, key);</p>\r\n<p>Can any one please suggest what am I doing wrong. Below is the complete function.</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> Wifi_SetProfile(<span style=\"color:blue\">string</span> profileargs, <span style=\"color:blue\">string</span> keyargs)\r\n        {\r\n            <span style=\"color:green\">// Connects to a known network with WEP security</span>\r\n            <span style=\"color:blue\">string</span> profileName = profileargs; <span style=\"color:green\">// this is also the SSID</span>\r\n            <span style=\"color:blue\">string</span> key = keyargs;\r\n\r\n            WlanClient client = <span style=\"color:blue\">new</span> WlanClient();\r\n            <span style=\"color:blue\">foreach</span> (WlanClient.WlanInterface wlanIface <span style=\"color:blue\">in</span> client.Interfaces)\r\n            {\r\n                <span style=\"color:green\">// Connects to a known network with WEP security</span>\r\n\t\t\t\t<span style=\"color:blue\">string</span> profileXml = <span style=\"color:blue\">string</span>.Empty;\r\n\t\t\t\tWlan.WlanAvailableNetwork[] networks = wlanIface.GetAvailableNetworkList(0);\r\n\t\t\t\t<span style=\"color:blue\">foreach</span> (Wlan.WlanAvailableNetwork network <span style=\"color:blue\">in</span> networks)\r\n\t\t\t\t{\r\n\t\t\t\t\t<span style=\"color:blue\">if</span> (profileargs == GetStringForSSID(network.dot11Ssid))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t<span style=\"color:blue\">string</span> name = GetStringForSSID(network.dot11Ssid); <span style=\"color:green\">// this is typically the network's SSID</span>\r\n\r\n\t\t\t\t\t\t<span style=\"color:blue\">if</span> (network.dot11DefaultAuthAlgorithm == Wlan.Dot11AuthAlgorithm.IEEE80211_Open)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprofileXml = <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;&lt;?xml version=\\&quot;1.0\\&quot;?&gt;&lt;WLANProfile xmlns=\\&quot;http://www.microsoft.com/networking/WLAN/profile/v1\\&quot;&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;SSIDConfig&gt;&lt;SSID&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;/SSID&gt;&lt;/SSIDConfig&gt;&lt;connectionType&gt;ESS&lt;/connectionType&gt;&lt;MSM&gt;&lt;security&gt;&lt;authEncryption&gt;&lt;authentication&gt;open&lt;/authentication&gt;&lt;encryption&gt;None&lt;/encryption&gt;&lt;useOneX&gt;false&lt;/useOneX&gt;&lt;/authEncryption&gt;&lt;/security&gt;&lt;/MSM&gt;&lt;/WLANProfile&gt;&quot;</span>, profileName, key);\r\n\t\t\t\t\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span style=\"color:blue\">if</span> (network.dot11DefaultAuthAlgorithm == Wlan.Dot11AuthAlgorithm.RSNA_PSK)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t<span style=\"color:green\">//doesnot used shared key on this profile xml which will prompt user to add the key to connect</span>\r\n\t\t\t\t\t\t\tprofileXml = <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;&lt;?xml version=\\&quot;1.0\\&quot; ?&gt;&lt;WLANProfile xmlns=\\&quot;http://www.microsoft.com/networking/WLAN/profile/v1\\&quot;&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;SSIDConfig&gt;&lt;SSID&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;/SSID&gt;&lt;/SSIDConfig&gt;&lt;connectionType&gt;ESS&lt;/connectionType&gt;&lt;connectionMode&gt;auto&lt;/connectionMode&gt;&lt;autoSwitch&gt;false&lt;/autoSwitch&gt;&lt;MSM&gt;&lt;security&gt;&lt;authEncryption&gt;&lt;authentication&gt;WPA2PSK&lt;/authentication&gt;&lt;encryption&gt;TKIP&lt;/encryption&gt;&lt;useOneX&gt;false&lt;/useOneX&gt;&lt;/authEncryption&gt;&lt;sharedKey&gt;&lt;keyType&gt;passPhrase&lt;/keyType&gt;&lt;protected&gt;true&lt;/protected&gt;&lt;keyMaterial&gt;{1}&lt;/keyMaterial&gt;&lt;/sharedKey&gt;&lt;/security&gt;&lt;/MSM&gt;&lt;/WLANProfile&gt;&quot;</span>, profileName, key);\r\n\t\t\t\t\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span style=\"color:blue\">if</span> (network.dot11DefaultAuthAlgorithm == Wlan.Dot11AuthAlgorithm.WPA)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprofileXml = <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;&lt;?xml version=\\&quot;1.0\\&quot;?&gt;&lt;WLANProfile xmlns=\\&quot;http://www.microsoft.com/networking/WLAN/profile/v1\\&quot;&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;SSIDConfig&gt;&lt;SSID&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;/SSID&gt;&lt;/SSIDConfig&gt;&lt;connectionType&gt;ESS&lt;/connectionType&gt;&lt;connectionMode&gt;auto&lt;/connectionMode&gt;&lt;autoSwitch&gt;false&lt;/autoSwitch&gt;&lt;MSM&gt;&lt;security&gt;&lt;authEncryption&gt;&lt;authentication&gt;WPAPSK&lt;/authentication&gt;&lt;encryption&gt;TKIP&lt;/encryption&gt;&lt;useOneX&gt;false&lt;/useOneX&gt;&lt;/authEncryption&gt;&lt;sharedKey&gt;&lt;keyType&gt;passPhrase&lt;/keyType&gt;&lt;protected&gt;true&lt;/protected&gt;&lt;keyMaterial&gt;{1}&lt;/keyMaterial&gt;&lt;/sharedKey&gt;&lt;/security&gt;&lt;/MSM&gt;&lt;/WLANProfile&gt;&quot;</span>, profileName, key);\r\n\t\t\t\t\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span style=\"color:blue\">if</span> (network.dot11DefaultAuthAlgorithm == Wlan.Dot11AuthAlgorithm.WPA_PSK)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprofileXml = <span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;&lt;?xml version=\\&quot;1.0\\&quot; ?&gt;&lt;WLANProfile xmlns=\\&quot;http://www.microsoft.com/networking/WLAN/profile/v1\\&quot;&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;SSIDConfig&gt;&lt;SSID&gt;&lt;name&gt;{0}&lt;/name&gt;&lt;/SSID&gt;&lt;/SSIDConfig&gt;&lt;connectionType&gt;ESS&lt;/connectionType&gt;&lt;connectionMode&gt;auto&lt;/connectionMode&gt;&lt;autoSwitch&gt;false&lt;/autoSwitch&gt;&lt;MSM&gt;&lt;security&gt;&lt;authEncryption&gt;&lt;authentication&gt;WPAPSK&lt;/authentication&gt;&lt;encryption&gt;TKIP&lt;/encryption&gt;&lt;useOneX&gt;false&lt;/useOneX&gt;&lt;/authEncryption&gt;&lt;sharedKey&gt;&lt;keyType&gt;passPhrase&lt;/keyType&gt;&lt;protected&gt;true&lt;/protected&gt;&lt;keyMaterial&gt;{1}&lt;/keyMaterial&gt;&lt;/sharedKey&gt;&lt;/security&gt;&lt;/MSM&gt;&lt;/WLANProfile&gt;&quot;</span>, profileName, key);\r\n\t\t\t\t\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<span style=\"color:green\">//makes sure you do not replace the saved profile</span>\r\n\t\t\t\t<span style=\"color:blue\">foreach</span> (Wlan.WlanProfileInfo profileInfo <span style=\"color:blue\">in</span> wlanIface.GetProfiles())\r\n\t\t\t\t{\r\n\t\t\t\t\t<span style=\"color:blue\">string</span> profilename = profileInfo.profileName;\r\n\t\t\t\t\t<span style=\"color:blue\">if</span> (profileargs == profilename)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t<span style=\"color:blue\">try</span>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprofileXml = wlanIface.GetProfileXml(profileInfo.profileName);\r\n\t\t\t\t\t\t\twlanIface.SetProfile(Wlan.WlanProfileFlags.AllUser, profileXml, <span style=\"color:blue\">false</span>);\r\n\t\t\t\t\t\t\twlanIface.Connect(Wlan.WlanConnectionMode.Profile, Wlan.Dot11BssType.Any, profileName);\r\n\r\n\t\t\t\t\t\t\t<span style=\"color:green\">//Send Message to Update View</span>\r\n\t\t\t\t\t\t\tNetworkParameters param = <span style=\"color:blue\">new</span> NetworkParameters();\r\n\t\t\t\t\t\t\tparam.isConnected = <span style=\"color:blue\">true</span>;\r\n\t\t\t\t\t\t\tparam.connectionString = profileInfo.profileName;\r\n\t\t\t\t\t\t\t<span style=\"color:blue\">var</span> genericmessage = <span style=\"color:blue\">new</span> GenericMessage&lt;NetworkParameters&gt;(<span style=\"color:blue\">this</span>, param);\r\n\t\t\t\t\t\t\tMessenger.Default.Send(genericmessage);\r\n\t\t\t\t\t\t\tbtnCancel.RaiseEvent(<span style=\"color:blue\">new</span> RoutedEventArgs(Button.ClickEvent));\r\n\t\t\t\t\t\t\t<span style=\"color:blue\">return</span>;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span style=\"color:blue\">catch</span> (Exception ex)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tMessageBox.Show(ex.Message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<span style=\"color:blue\">try</span>\r\n\t\t\t\t{\r\n\t\t\t\t\twlanIface.SetProfile(Wlan.WlanProfileFlags.AllUser, profileXml, <span style=\"color:blue\">true</span>);\r\n\t\t\t\t\twlanIface.Connect(Wlan.WlanConnectionMode.Profile, Wlan.Dot11BssType.Any, profileName);\r\n\t\t\t\t\t<span style=\"color:green\">//Send Message to Update View</span>\r\n\t\t\t\t\tNetworkParameters param = <span style=\"color:blue\">new</span> NetworkParameters();\r\n\t\t\t\t\tparam.isConnected = <span style=\"color:blue\">true</span>;\r\n\t\t\t\t\tparam.connectionString = profileargs;\r\n\t\t\t\t\t<span style=\"color:blue\">var</span> genericmessage = <span style=\"color:blue\">new</span> GenericMessage&lt;NetworkParameters&gt;(<span style=\"color:blue\">this</span>, param);\r\n\t\t\t\t\tMessenger.Default.Send(genericmessage);\r\n\t\t\t\t\tbtnCancel.RaiseEvent(<span style=\"color:blue\">new</span> RoutedEventArgs(Button.ClickEvent));\r\n\t\t\t\t}\r\n\t\t\t\t<span style=\"color:blue\">catch</span> (Exception ex)\r\n\t\t\t\t{\r\n\t\t\t\t\tMessageBox.Show(ex.Message);\r\n\t\t\t\t}\r\n               \r\n            }\r\n        }\r\n        \r\n\t}\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-11-26T13:51:43.243-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949054",
    "ThreadId": "404651",
    "Html": "\r\n<p>I have been running into this same issue. &nbsp;No matter what I do, I always get the corrupted profile error. &nbsp;I have been swallowing this exception and using the event handler (wlanIface_WlanConnectionNotification) to report success and failure based on the&nbsp;Wlan.WlanNotificationCodeAcm\r\n objects that come back.</p>\r\n<p>&nbsp;</p>\r\n<p>Even if the Corrupt profile exception occurs I am still seeing a successful connection.</p>\r\n<p>&nbsp;</p>\r\n<p>However when i give the Connect method a bad passPhrase my application seems to crash unexpectedly even if I swallow all System.Exceptions. &nbsp;Not quite sure why.</p>\r\n",
    "PostedDate": "2012-11-29T07:45:29.093-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "997162",
    "ThreadId": "404651",
    "Html": "You forget the &lt;hex&gt;&lt;/hex&gt; of the SSID in the SSID-Tag.<br />\n<br />\n&lt;SSIDConfig&gt;<br />\n&lt;SSID&gt;<br />\n&lt;name&gt;{0}&lt;/name&gt;<br />\n&lt;hex&gt;{x}&lt;/hex&gt;<br />\n&lt;/SSID&gt;<br />\n&lt;/SSIDConfig&gt;<br />\n<br />\nYou must convert the SSID-name to HEX.<br />\n<br />\nThen it should be working.<br />\n<br />\ngreetz<br />\n",
    "PostedDate": "2013-02-06T02:59:41.473-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1027779",
    "ThreadId": "404651",
    "Html": "What's interesting to me is that Microsoft does not include the hex element in their profiles that they create for connections, nor do they have it in any of their samples.  So if I just use the profile that's already on the system, it may throw the error.  Easy to put in a try/catch, but still...\r<br />\n<br />\nI actually posted because I noticed that you have &lt;authenticate&gt; set to WPAPSK for both WPA and WPAPSK profiles.  Looking at Microsoft's samples, it's hard to tell what they are using as WPA and what is WPAPSK.  it looks like their WPA-Personal is shared key, and Enterprise is not?  (cf <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/aa369853(v=vs.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/windows/desktop/aa369853(v=vs.85).aspx</a>)\r<br />\n<br />\nAnyone know how to map the dot11DefaultAuthAlgorithm enum to those samples?<br />\n",
    "PostedDate": "2013-04-09T04:19:55.193-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]